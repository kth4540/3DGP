##모델의 표현

	모델 좌표계(local space,model space)

		모델(메쉬)를 표현하기 위한 좌표계

		모델마다 '자체적인 별도의 좌표계'를 갖고 있다고 가정

	월드 좌표계(global space,world space)

		게임 세계를 하나의 통일된 좌표계로 표현

		모든 객체(메쉬)들이 동일한 하나의 좌표계로 표현(배치)

##모델과 객체

	모델=메쉬(기하학적 모델) -> 렌더링을 통한 변하지 않는 겉모양

	객체=모델의 instance -> 

##메쉬와 텍스쳐 매핑

	맵(map):2D 이미지

	매핑(mapping):맵을 모델링에 사용해 3D 효과를 내는 작업

	2D 이미지는 함수로 표현 가능 -> 평행이동, 회전, 대칭 등이 가능함

	2D에서는 렌더링 , 충돌처리(collision-> respond)이 상대적으로 쉬움

##게임 월드와 단위

	게임 월드의 크기와 단위를 아티스트와 협력하여 결정해야 함

	1 단위가 1m에서 1km로 바뀐다면 동일한 월드좌표계의서의 크기 문제 발생

	메쉬의 크기와 이동 속력,텍스쳐 매핑을 어떻게 할 것인가를 고려해야 함

	->모든 객체가 서로 상대적이면서 일관된 크기로 만들어야 문제가 없다

##다각형 와인딩 순서

	은면 제거

		다각혁을 그리기 전에 다각형의 각 구성면이 은면인가를 빠르게 판단해야함

	와인딩 순서

		다각형의 정점들을 나열하는 순서

		메쉬를 구성하는 선분들이 어떻게 연결되는 가를 나타냄

		와인딩 순서를 사용하여 은면 제거를 수행할 수 있음

		시계방향 와인딩 순서: 한 면을 정면에서 바라볼 때,
		그 면의 모든 정점들이 시계방향으로 나열되는 것을 의미함

		정점의 시작은 문제가 되지 않고, 방향이 시계방향이면 됨

		뒷면을 와인딩할 땐 반시계(정면 기준)방향으로 해야함

##렌더링

	장면(scene)

		게임 월드 자체

		게임 월드에서 현재 화면에 그려져야 하는 부분

		게임 월드=객체(메쉬)들 (배경, 이펙트 등도 객체로 취급)

	렌더링

		장면을 렌더링하는 것은 게임 월드의 모든 객체들을 그리는 것

		결과적으로 모든 다각형들을 그리는 것

		다각형의 3D 모델 좌표를 2D 화면 좌표로 변환하는 과정(행렬)

		변환: 모양, 크기, 방향

##화면 좌표 렌더링

	화면 좌표계에서의 그리기

		다각형의 3D 모델 좌표를 2D 화면 좌표로 변환하여
		그 정점들을 선분으로 연결하여 그릴 수 있음